# We intentionally left comments in Chinese for LLM to relate fields with the terms in prompt.
type Character {
  # Primary key
  characterPrefabKey: String!
  
  name: String!

  description: String!

  tagList: [String!]

  # 位置：高台或地面
  position: String!

  # 职业
  profession: String!

  # 职业分支
  subProfession: String!

  # 可以获得此干员
  isNotObtainable: Boolean!

  # 稀有度， 星级，范围：1 ~6
  rarity: Int!

  # 职业特性
  traits: String!

  # 技能 （不包括技能专精需求）
  skills: [Skill!]

  # 精英等级，范围：未精英（精英0），精英一，精英二
  phases: [Phase!]

  # 天赋
  talents: [String!]

  # 每个潜能等级带来的提升
  potentialRanks: [String!]

  # 每个技能的专精需求
  skillRequirements: [SkillRequirement!]
}

type Skill {
  skillId: String!

  skillName: String!

  # 拥有此技能的干员
  characters: [Character!]

  # 此技能的专精需求
  skillRequirements: [SkillRequirement!]

  # 每一级的技能信息 (第8, 9, 10级称为专精1，2，3)
  levels: [SkillLevel!]
}

type SkillLevel {
  description: String!
  # 技能类型，可以为：自动触发，手动触发，被动技能
  skillType: String!
  # 持续类型，可以为：时间，弹药
  durationType: String!
  duration: Int!

  # 技能点回复类型，可以为：自动回复，攻击回复，受击回复
  spType: String!
  # 开启技能所需消耗SP
  spCost: Int!
  # 初始SP，初动
  initialSp: Int!
  # 可充能次数
  maxCharge: Int!
}

# 精英等级
type Phase {
  # 属性节点
  attributesKeyFrames: [AttributesKeyFrame!]

  maxLevel: Int!

  # 到达精英等级所需材料
  evolveCost: [MaterialCost!]
}

type AttributesKeyFrame {
  level: Int!
  maxHp: Int!
  atk: Int!
  physicalDef: Int!
  magicResistance: Int!

  # 部署费用
  cost: Int!

  # 攻击间隔（秒）
  baseAttackTime: Float!

  # 再部署间隔（秒）
  respawnTime: Int!

  tauntLevel: Int!
}

type MaterialCost {
  id: String!
  count: Int!
}

type SkillRequirement {
  skill: Skill!
  character: Character!
  proficientRequirements: [ProficientRequirement!]
}

type ProficientRequirement {
  # 专精时间（秒）
  timeCost: Int!
  materialCost: [MaterialCost!]
}

input CharacterFilter {
  name: String

  tagList: [String!]

  # 稀有度， 星级，范围1 ~6
  rarity: Int
  
  # 位置：高台或地面
  position: String

  # 职业
  profession: String

  # 职业分支
  subProfession: String
}

input SkillFilter {
  skillName: String
}

type Query {
  characters(filter: CharacterFilter!): [Character!]

  skill(filter: SkillFilter): Skill
}
